<!-- -*- xml -*-

     This tutorial relies on a live video sequence acquired with an
     usb camera in front of a QR code planar target. The model
     corresponding to this target is given into the models directory
     of this package.

     Camera parameters are set as rosparam parameters. They need to be changed
     to be the one of your camera.

     See http://www.ros.org/wiki/visp_auto_tracker for more information.

  -->
<launch>

	<!-- Bring up the turtlebot -->
	<include file="$(find turtlebot_bringup)/launch/minimal.launch" />

	<!-- Joy launch file-->
	<include file="$(find Demo2)/joy.launch"/> 
	
	<!--Velocity smooth file-->
	<include file="$(find Demo3)/standalone.launch"/>
	
	<!-- AMCL Map -->
	<include file="$(find turtlebot_navigation)/launch/amcl_demo.launch">
	<arg name="map_file" default="$(find comp4)/mymap_CS12.yaml"/>
	<node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" /> 
	</include>  

	<!--Launch rviz-->
	<include file="$(find turtlebot_rviz_launchers)/launch/view_navigation.launch"/> 
 	
	<!--Image proc-->
	
	<!--Launch part2b.launch for AR code-->
	<include file="$(find Demo6)/part2b.launch"/>
	
	<!--Move Base-->
	
	<!--Safety Controller-->
	<include file="$(find Demo3)/safety_controller.launch"/>
	
	<!--Launch OUR code 
	<node pkg="comp4" type="comp4c.py" name="comp4"/>-->
	
	<!--Sound-
	<node name="soundplay_node" pkg="sound_play" type="soundplay_node.py"/>-->

  
  
</launch>

